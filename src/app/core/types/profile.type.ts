/**
 * Typescript allows us to have derived type for negative cases
 *
 * Eg. In adapter for profiles that has data issues, false can be used..
 */
export type TypeProfile = IProfile | false;

/**
 * The registered user profile type
 */
export interface IProfile {

  /**
   * Primary key in our system for the user
   */
  id: number;

  /**
   * Full name of the user
   */
  name: string;

  /**
   * age of the user
   */
  age: number;

  /**
   * display picture url of the user
   */
  dpUrl: string;

  /**
   * An autogenerated code for sharing, quick find etc!
   */
  code: string;

  /**
   * study, profession, star/sun sign etc
   */
  details: string;

  /**
   * religion of the user
   */
  religion: string;

  /**
   * current location of the user
   */
  location: string;

  /**
   * verification status of the user
   */
  isVerified: boolean;

  /**
   * NRI status of the user
   */
  isNRI: boolean;

  /**
   * A sample field simulating the shortlisted status of the logged-in user to this user
   */
  isShortlisted: boolean;

  /**
   * Sample gallery images
   */
  gallery?: string[];
}
